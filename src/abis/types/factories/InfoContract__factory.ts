/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { InfoContract, InfoContractInterface } from "../InfoContract";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "age",
        type: "uint256",
      },
    ],
    name: "Instructor",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_age",
        type: "uint256",
      },
    ],
    name: "setInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sayHi",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getInfo",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506105ef8061001f6000396000f3fe608060405234801561001057600080fd5b5060043610610069576000357c0100000000000000000000000000000000000000000000000000000000900480630c49c36c1461006e57806317d7de7c1461008c5780635a9b0b89146100aa5780638262963b146100c9575b600080fd5b6100766100e5565b604051610083919061031d565b60405180910390f35b610094610122565b6040516100a1919061031d565b60405180910390f35b6100b26101b4565b6040516100c0929190610358565b60405180910390f35b6100e360048036038101906100de91906104fd565b610250565b005b60606040518060400160405280600281526020017f4869000000000000000000000000000000000000000000000000000000000000815250905090565b60606000805461013190610588565b80601f016020809104026020016040519081016040528092919081815260200182805461015d90610588565b80156101aa5780601f1061017f576101008083540402835291602001916101aa565b820191906000526020600020905b81548152906001019060200180831161018d57829003601f168201915b5050505050905090565b60606000806001548180546101c890610588565b80601f01602080910402602001604051908101604052809291908181526020018280546101f490610588565b80156102415780601f1061021657610100808354040283529160200191610241565b820191906000526020600020905b81548152906001019060200180831161022457829003601f168201915b50505050509150915091509091565b7f010becc10ca1475887c4ec429def1ccc2e9ea1713fe8b0d4e9a1d009042f6b8e8282604051610281929190610358565b60405180910390a15050565b600081519050919050565b600082825260208201905092915050565b60005b838110156102c75780820151818401526020810190506102ac565b60008484015250505050565b6000601f19601f8301169050919050565b60006102ef8261028d565b6102f98185610298565b93506103098185602086016102a9565b610312816102d3565b840191505092915050565b6000602082019050818103600083015261033781846102e4565b905092915050565b6000819050919050565b6103528161033f565b82525050565b6000604082019050818103600083015261037281856102e4565b90506103816020830184610349565b9392505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6103de826102d3565b810181811067ffffffffffffffff821117156103fd576103fc6103a6565b5b80604052505050565b6000610410610388565b905061041c82826103d5565b919050565b600067ffffffffffffffff82111561043c5761043b6103a6565b5b610445826102d3565b9050602081019050919050565b82818337600083830152505050565b600061047461046f84610421565b610406565b9050828152602081018484840111156104905761048f6103a1565b5b61049b848285610452565b509392505050565b600082601f8301126104b8576104b761039c565b5b81356104c8848260208601610461565b91505092915050565b6104da8161033f565b81146104e557600080fd5b50565b6000813590506104f7816104d1565b92915050565b6000806040838503121561051457610513610392565b5b600083013567ffffffffffffffff81111561053257610531610397565b5b61053e858286016104a3565b925050602061054f858286016104e8565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806105a057607f821691505b6020821081036105b3576105b2610559565b5b5091905056fea2646970667358221220af1f339da85a6880162e689f87d44555f38b628acc4f33e4c433d96562471f0364736f6c634300081c0033";

type InfoContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InfoContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InfoContract__factory extends ContractFactory {
  constructor(...args: InfoContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<InfoContract> {
    return super.deploy(overrides || {}) as Promise<InfoContract>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): InfoContract {
    return super.attach(address) as InfoContract;
  }
  override connect(signer: Signer): InfoContract__factory {
    return super.connect(signer) as InfoContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InfoContractInterface {
    return new utils.Interface(_abi) as InfoContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InfoContract {
    return new Contract(address, _abi, signerOrProvider) as InfoContract;
  }
}
